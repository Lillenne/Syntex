#+title: Syntex

CLI utility to export C# syntax trees to [[https://mermaid.js.org/syntax/classDiagram.html][mermaid class diagrams]] and vice versa.

[[./readme-images/code-transpile.png]]

* Install
#+begin_src shell
git clone https://github.com/Lillenne/Syntex
cd Syntex
dotnet pack
dotnet tool install --global --add-source ./Src/Syntex.CLI/nupkg Lillenne.Syntex
#+end_src

* Usage
** C# to mermaid
#+begin_src shell
syntex cs --help

Description:
  Export to mermaid class diagram

Usage:
  Syntex mmd cd [options]

Options:
  --classes <classes> (REQUIRED)                                                                                                                   The fully qualified names of the classes to generate diagrams for.
  --all                                                                                                                                            Include all methods, properties, and fields regardless of accessibility.
                                                                                                                                                   Overrides individual accessibility settings.
  --public                                                                                                                                         Include only public methods, properties, and fields regardless of accessibility.
                                                                                                                                                   Overrides individual accessibility settings and the 'all' setting.
  --method <Friend|Internal|NotApplicable|Private|Protected|ProtectedAndFriend|ProtectedAndInternal|ProtectedOrFriend|ProtectedOrInternal|Public>  Minimum accessibility level for methods [default: Protected]
  --field <Friend|Internal|NotApplicable|Private|Protected|ProtectedAndFriend|ProtectedAndInternal|ProtectedOrFriend|ProtectedOrInternal|Public>   Minimum accessibility level for fields [default: Protected]
  --props <Friend|Internal|NotApplicable|Private|Protected|ProtectedAndFriend|ProtectedAndInternal|ProtectedOrFriend|ProtectedOrInternal|Public>   Minimum accessibility level for properties [default: Protected]
  --proj <proj>                                                                                                                                    The project(s) or solution(s) containing the files to parse.
  -?, -h, --help                                                                                                                                   Show help and usage information
#+end_src
  
#+begin_src shell
syntex mmd cd --classes Syntex.ITest Syntex.Test "Syntex.Test<T>" "Syntex.Test\`2"
#+end_src

#+begin_src mermaid :background-color transparent
classDiagram
    class ITest
    ITest : +Method() Int32
    ITest : +Int32 Property

    class Test
    Test : +Method() Int32
    Test : +Int32 Property
    Test ..|> ITest

    class Test1~T~
    Test1~T~ : +Method() Int32
    Test1~T~ : +String SomeProp
    Test1~T~ : +Int32 Property
    Test <|.. Test1~T~

    class Test2~T, U~
    Test2~T, U~ : +String SomeProp2
    Test1~T~ <|.. Test2~T, U~
#+end_src
** Mermaid to C#
#+begin_src shell
syntex mmd --help

Description:
  Export mermaid class diagram

Usage:
  Syntex.CLI mmd [command] [options]

Options:
  --input <input> (REQUIRED)  The input mermaid class diagram
  -?, -h, --help              Show help and usage information

Commands:
  cs  Export mermaid class diagram to C# source files.
#+end_src

#+begin_src shell
syntex mmd cs --input sample-diagram.cs
#+end_src

Contents of [[file:sample-diagram.mmd][the sample diagram]]:
#+begin_src mermaid :theme dark :background-color transparent
classDiagram
    A <|-- B
    B ..|> C

    class A

    class B {
      -TestField
      +int AnotherTestField
      +TestMethod() int*
      +VoidMethod()$
    }
#+end_src

Output:
#+begin_src csharp
public class A
{
}

public class B : A, C
{
    private TYPE TestField { get; set; }

    public int AnotherTestField { get; set; }


    public abstract int TestMethod()
    {

    }

    public static void VoidMethod()
    {

    }
}


#+end_src
